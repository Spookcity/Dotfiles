#!/bin/bash
#
# Author: Tsutsukakushi <yui@cock.li>
#         7B29 6212 4A73 E1E9 15E8  A7D4 7F96 C964 9CBC BF51
#
# License: CC0
#
# Version: 0.5.2

base="/mnt/shit/YouTube"

die() {
    rv=$1
    shift

    printf "\033[31mERROR:\033[m %s\n" "$@" >&2
    printf "\a" >&2
    exit "$rv"
}

require() {
    for dep in "$@"; do
        if ! which "$dep" >/dev/null; then
            die 123 "Missing a dependency: $dep"
        fi
    done
}

usage() {
    cat <<EOF
Usage:

    $0 [options] -- [patterns]

    -h        | Show this help
    -q        | Quiet
    -d arg    | Base directory, default: ./
    -j arg    | Amount of channels to download in parallel, default: 10
    -f arg    | Use different channel list, default: ./channels
    --        | End of arguments
    [pattern] | Whatever pattern that grep -E would accept.

Channel file should contain lines in the form:

directory,url

Example:

chn/humor/ltcorbis,https://www.youtube.com/channel/UCT7BLBDnD-wEXeqZSg24aJw
EOF
    exit 0
}

dl_channel() {
    dir="$(printf "%s" "$1" | cut -f1 -d,)"
    chn="$(basename -- "$dir")"
    url="$(printf "%s" "$1" | cut -f2 -d,)"

    if [[ "$dir" =~ ^# ]]; then
        printf "\033[1;31mSkipping\033[0;1m %s\033[m\n" "${chn}"
        return 0
    fi

    printf "\033[33mStarting\033[0;1m %s\033[m\n" "$chn"
         ${ytdl:-youtube-dl} \
            --external-downloader aria2c \
            --external-downloader-args "-x 16 -s 16 -k 1M" \
            --download-archive "$dir/.archive" \
            --exec "mkdir -p new/$chn; ln {} new/$chn/; echo 1 >&2" \
            --ignore-errors \
            --output "$dir/%(id)s-%(title)s.%(ext)s" \
            --restrict-filenames \
            -- "$url" &>/dev/null
    printf "\033[32mFinished\033[0;1m %s\033[m\n" "$chn"
}

while [ "$#" -gt 0 ]; do
    case "$1" in
        -j) if [[ "$2" =~ ^[0-9]+$ ]]; then
                p="$2"
                shift
            else
                die 7 "Argument to -j must be a number."
            fi;;
        -d) if [ -d "$base" ]; then
                base="$2"
                shift
            else
                die 8 "Argument to -d must be a directory."
            fi
            ;;
        -f) channelfile="$1"
            shift
            ;;
        -p) ytdl="proxychains $ytdl"
            ;;
        -r) random="on"
            ;;
        -h) usage
            ;;
        -q) exec >/dev/null
            ;;
        --) shift; break;;
        *) die 6 "Unknown argument!";;
    esac
    shift
done

require youtube-dl parallel gawk

while [ "$#" -gt 0 ]; do
    pattern="on"
    patterns[${#patterns}]=$1
    shift
done


which youtube-dl parallel gawk >/dev/null ||
    die 9 "Make sure you have youtube-dl, parallel and gawk installed."

cd -- "$base" || die 1 "Couldn't cd to the base dir."

if [ -z "$channelfile" ]; then
    channelfile="/mnt/shit/YouTube/.channels"
fi

if ! [ -f "$channelfile" ]; then
    die 2 "Make sure $channelfile exists and is readable" \
    "The file should be in the form:" "directory,url"
fi

if [ ! -d new ]; then
    mkdir new || die 3 "Couldn't make a dir for new downloads"
fi

gawk -v FS="," '!/^#/ {print $1}' "$channelfile" \
    | parallel -u -n 1 --will-cite mkdir -p -- \
    || die 4 "Couldn't make one or more of the directories."

export -f dl_channel

if [ -z "$pattern" ];then
    if [ "$random" = "on" ]; then
        sort -r -- "$channelfile" | parallel -u -n 1 -P "${p:-10}" --will-cite dl_channel \
            || die 5 "Problems downloading some channels or something."
    else
        parallel -u -n 1 -P "${p:-10}" --will-cite dl_channel :::: "$channelfile" \
            || die 5 "Problems downloading some channels or something."
    fi
else
    if [ "$random" = "on" ]; then
        channels=$(parallel -u -P "${p:-10}" --will-cite -- 'printf "%s\n" {2} | grep -E -- {1}' ::: "${patterns[@]}" :::: "$channelfile" | gawk '!u[$0]++' | sort -r)
    else
        channels=$(parallel -u -P "${p:-10}" --will-cite -- 'printf "%s\n" {2} | grep -E -- {1}' ::: "${patterns[@]}" :::: "$channelfile" | gawk '!u[$0]++')
    fi
fi

if [ -n "$channels" ]; then
    parallel -u -n 1 -P "${p:-10}" --will-cite dl_channel <<EOF ||
${channels}
EOF
    die 5 "Problems downloading some channels or something."
else
    die 6 "No channel matches any of the given patterns."
fi

printf "\a" >&2
exit 0
